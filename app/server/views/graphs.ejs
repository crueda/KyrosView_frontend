<!DOCTYPE html>
<html lang="en">
<head>
  <title>Kyros View</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link href='./img/kyros.png' rel='shortcut icon' type='image/png'> 
  <link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.0/jquery.min.js"></script>
  <script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
  <style>
      html,body{
       height:100%;
   }
   .carousel-inner{
    height:100%;
    width:100%;
}
.carousel,.item,.active{
   height:100%;
}
.carousel-inner > .item > div {
  width: 80%;
  height:100%;
  margin: auto;

}

#attr-button-map
{
    position:absolute; 
    left: 5px; 
    bottom: 5px; 
    z-index:10000; 
    width:48px; 
    height:48px; 
    background-image: url("./img/buttons/button_map.png");
}

</style>


<script type="text/javascript">

    var baseurl = "";

    function getInitDateLastDays(days) {
        var milliseconds = (new Date).getTime();
        return (milliseconds - days * 86400000);
    }

    $(function () {

     $('#containerDay').bind('mousemove touchmove touchstart', function (e) {
        var chart,
        point,
        i,
        event;

        for (i = 0; i < Highcharts.charts.length; i = i + 1) {
            chart = Highcharts.charts[i];
            event = chart.pointer.normalize(e.originalEvent); // Find coordinates within the chart
            point = chart.series[0].searchPoint(event, true); // Get the hovered point

            if (point) {
                point.highlight(e);
            }
        }
    });
     $('#containerWeek').bind('mousemove touchmove touchstart', function (e) {
        var chart,
        point,
        i,
        event;

        for (i = 0; i < Highcharts.charts.length; i = i + 1) {
            chart = Highcharts.charts[i];
            event = chart.pointer.normalize(e.originalEvent); // Find coordinates within the chart
            point = chart.series[0].searchPoint(event, true); // Get the hovered point

            if (point) {
                point.highlight(e);
            }
        }
    });
     $('#containerMonth').bind('mousemove touchmove touchstart', function (e) {
        var chart,
        point,
        i,
        event;

        for (i = 0; i < Highcharts.charts.length; i = i + 1) {
            chart = Highcharts.charts[i];
            event = chart.pointer.normalize(e.originalEvent); // Find coordinates within the chart
            point = chart.series[0].searchPoint(event, true); // Get the hovered point

            if (point) {
                point.highlight(e);
            }
        }
    });

    /**
     * Override the reset function, we don't need to hide the tooltips and crosshairs.
     */
     Highcharts.Pointer.prototype.reset = function () {
        return undefined;
    };

    /**
     * Highlight a point by showing tooltip, setting hover state and draw crosshair
     */
     Highcharts.Point.prototype.highlight = function (event) {
        this.onMouseOver(); // Show the hover marker
        this.series.chart.tooltip.refresh(this); // Show the tooltip
        this.series.chart.xAxis[0].drawCrosshair(event, this); // Show the crosshair
    };

    /**
     * Synchronize zooming through the setExtremes event handler.
     */
     function syncExtremes(e) {
        var thisChart = this.chart;

        if (e.trigger !== 'syncExtremes') { // Prevent feedback loop
            Highcharts.each(Highcharts.charts, function (chart) {
                if (chart !== thisChart) {
                    if (chart.xAxis[0].setExtremes) { // It is null while updating
                        chart.xAxis[0].setExtremes(e.min, e.max, undefined, false, { trigger: 'syncExtremes' });
                    }
                }
            });
        }
    }

    // Get the data. 
    //alert('/api/activity/<%=vehicleLicense%>?initDate='+getInitDateLastDays(1));
    $.getJSON('/api/activity/<%=vehicleLicense%>?initDate='+getInitDateLastDays(1), function (activity) {
        $.each(activity.datasets, function (i, dataset) {

            // Add X values
            dataset.data = Highcharts.map(dataset.data, function (val, j) {
                return [activity.xData[j], val];
            });

            $('<div class="chart">')
            .appendTo('#containerDay')
            .highcharts({
                global : {
                        //useUTC: true,
                    },
                    chart: {
                        marginLeft: 40, // Keep all charts left aligned
                        //pointStart: Date.UTC(2010, 0, 1),
                        spacingTop: 20,
                        spacingBottom: 20,
                        width: $(document).width(),
                        height: ($(document).height()/3)-10
                    },
                    title: {
                        text: dataset.name + ' de las últimas 24 horas',
                        align: 'left',
                        margin: 0,
                        x: 30
                    },
                    credits: {
                        enabled: false
                    },
                    legend: {
                        enabled: false
                    },
                    xAxis: {
                        crosshair: true,
                        events: {
                            setExtremes: syncExtremes
                        },
                        labels: {
                            formatter: function () {
                                var d = new Date()
                                var n = d.getTimezoneOffset();
                                var date1 = this.value;
                                var date2 = parseInt(date1)-((n/60)*7200000);
                                return Highcharts.dateFormat('%H:%M', new Date(date2));
                            }
                        }
                    },
                    yAxis: {
                        title: {
                            text: null
                        }
                    },
                    tooltip: {
                        positioner: function () {
                            return {
                                x: this.chart.chartWidth - this.label.width, // right aligned
                                y: -1 // align to title
                            };
                        },
                        borderWidth: 0,
                        backgroundColor: 'none',
                        pointFormat: '{point.y}',
                        headerFormat: '',
                        shadow: false,
                        style: {
                            fontSize: '18px'
                        },
                        valueDecimals: dataset.valueDecimals
                    },
                    series: [{
                        data: dataset.data,
                        name: dataset.name,
                        type: dataset.type,
                        color: Highcharts.getOptions().colors[i],
                        fillOpacity: 0.3,
                        tooltip: {
                            valueSuffix: ' ' + dataset.unit
                        }
                    }]
                });
        });
    });
    
    //alert('/api/activity/<%=vehicleLicense%>?initDate='+getInitDateLastDays(7));    
    $.getJSON('/api/activity/<%=vehicleLicense%>?initDate='+getInitDateLastDays(7), function (activity) {
        $.each(activity.datasets, function (i, dataset) {

            // Add X values
            dataset.data = Highcharts.map(dataset.data, function (val, j) {
                return [activity.xData[j], val];
            });

            $('<div class="chart">')
            .appendTo('#containerWeek')
            .highcharts({
                global : {
                    //useUTC : true
                }   ,chart: {
                        marginLeft: 40, // Keep all charts left aligned
                        spacingTop: 20,
                        spacingBottom: 20,
                        width: $(document).width(),
                        height: ($(document).height()/3)-10
                    },
                    title: {
                        text: dataset.name + ' de los últimos 7 días',
                        align: 'left',
                        margin: 0,
                        x: 30
                    },
                    credits: {
                        enabled: false
                    },
                    legend: {
                        enabled: false
                    },
                    xAxis: {
                        crosshair: true,
                        events: {
                            setExtremes: syncExtremes
                        },
                        labels: {
                            formatter: function () {
                                return Highcharts.dateFormat('%e-%b', new Date(this.value))
                            }
                        }
                    },
                    yAxis: {
                        title: {
                            text: null
                        }
                    },
                    tooltip: {
                        positioner: function () {
                            return {
                                x: this.chart.chartWidth - this.label.width, // right aligned
                                y: -1 // align to title
                            };
                        },
                        borderWidth: 0,
                        backgroundColor: 'none',
                        pointFormat: '{point.y}',
                        headerFormat: '',
                        shadow: false,
                        style: {
                            fontSize: '18px'
                        },
                        valueDecimals: dataset.valueDecimals
                    },
                    series: [{
                        data: dataset.data,
                        name: dataset.name,
                        type: dataset.type,
                        color: Highcharts.getOptions().colors[i],
                        fillOpacity: 0.3,
                        tooltip: {
                            valueSuffix: ' ' + dataset.unit
                        }
                    }]
                });
        });
    });
    
    $.getJSON('/api/activity/<%=vehicleLicense%>?initDate='+getInitDateLastDays(15), function (activity) {
        $.each(activity.datasets, function (i, dataset) {

            // Add X values
            dataset.data = Highcharts.map(dataset.data, function (val, j) {
                return [activity.xData[j], val];
            });

            $('<div class="chart">')
            .appendTo('#containerMonth')
            .highcharts({
                chart: {
                        marginLeft: 40, // Keep all charts left aligned
                        spacingTop: 20,
                        spacingBottom: 20,
                        width: $(document).width(),
                        height: ($(document).height()/3)-10
                    },
                    title: {
                        text: dataset.name + ' de los últimos 15 días',
                        align: 'left',
                        margin: 0,
                        x: 30
                    },
                    credits: {
                        enabled: false
                    },
                    legend: {
                        enabled: false
                    },
                    xAxis: {
                        crosshair: true,
                        events: {
                            setExtremes: syncExtremes
                        },
                        labels: {
                            formatter: function () {
                                //return Highcharts.dateFormat('%e-%b-%y', new Date(this.value))
                                return Highcharts.dateFormat('%e-%b', new Date(this.value))
                            }
                        }
                    },
                    yAxis: {
                        title: {
                            text: null
                        }
                    },
                    tooltip: {
                        positioner: function () {
                            return {
                                x: this.chart.chartWidth - this.label.width, // right aligned
                                y: -1 // align to title
                            };
                        },
                        borderWidth: 0,
                        backgroundColor: 'none',
                        pointFormat: '{point.y}',
                        headerFormat: '',
                        shadow: false,
                        style: {
                            fontSize: '18px'
                        },
                        valueDecimals: dataset.valueDecimals
                    },
                    series: [{
                        data: dataset.data,
                        name: dataset.name,
                        type: dataset.type,
                        color: Highcharts.getOptions().colors[i],
                        fillOpacity: 0.3,
                        tooltip: {
                            valueSuffix: ' ' + dataset.unit
                        }
                    }]
                });
        });
    });    


});

</script>
</head>
<body>


   <form id="myformLogout" action="/logout" method="POST">
   </form>

   <script src="https://code.highcharts.com/highcharts.js"></script>
   <script src="https://code.highcharts.com/modules/exporting.js"></script>

   <script>
    $(document).ready(function(){

        var pathArray = location.href.split( '/' );
        var protocol = pathArray[0];
        var host = pathArray[2];
        baseurl = protocol + '//' + host;

         if ('<%=vehicleLicense%>'=='') {
            location.href=baseurl+'/map';
          } 

       var height = $(window).height();  //getting windows height
       var width = $(window).width();  //getting windows width
       jQuery('#myCarousel').css('height',height+'px');   //and setting height of carousel
       jQuery('#myCarousel').css('width',width+'px');   //and setting width of carousel
       
       jQuery('#containerWeek').css('height',height+'px');   
       jQuery('#containerWeek').css('width',width+'px');   


       $("#left_control").css({ width: '7%' });
       $("#rigth_control").css({ width: '7%' });
       

       $('#myCarousel').carousel({
        interval: 120000,
        cycle: false
    });

});
</script>



<div id="myCarousel" class="carousel slide" data-ride="carousel">
    <div id="attr-button-map" onclick="javascript:location.href=baseurl+'/map'"></div>


    <!-- Indicators -->
    <ol class="carousel-indicators">
      <li data-target="#myCarousel" data-slide-to="0" class="active"></li>
      <li data-target="#myCarousel" data-slide-to="1"></li>
      <li data-target="#myCarousel" data-slide-to="2"></li>
  </ol>

  <!-- Wrapper for slides -->
  <div class="carousel-inner" role="listbox">
      <div class="item active">
        <div id="containerDay" style="width: 100%; height: 100%; margin: 0 auto"></div>
    </div>

    <div class="item">
        <!--img src="./img/img_chania2.jpg" alt="Chania" width="460" height="345"-->
        <div id="containerWeek" style="width: 100%; height: 100%; margin: 0 auto"></div>
    </div>
    
    <div class="item">
        <!--img src="./img/img_chania2.jpg" alt="Chania" width="460" height="345"-->
        <div id="containerMonth" style="width: 100%; height: 100%; margin: 0 auto"></div>
    </div>

</div>


<!-- Left and right controls -->
<a id="left_control" class="left carousel-control" href="#myCarousel" role="button" data-slide="prev">
  <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
  <span class="sr-only"><%= __('previous') %></span>
</a>
<a id="rigth_control" class="right carousel-control" href="#myCarousel" role="button" data-slide="next">
  <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
  <span class="sr-only"><%= __('next') %></span>
</a>
</div>


</body>
</html>
