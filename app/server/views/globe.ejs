<!DOCTYPE html>
<html>
<head>
  <title>Kyros View</title>
  <meta charset="utf-8">
    <meta name="viewport" content="initial-scale=1.0, width=device-width">
  
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/ol3/3.17.1/ol.css" />

  <link href='./img/kyros.png' rel='shortcut icon' type='image/png'> 
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css">
  <script src="https://code.jquery.com/jquery-1.11.2.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js"></script>
  <link rel="stylesheet" href="./css/ol3-layerswitcher.css?1" type="text/css">
  <script src="http://openlayers.org/en/v3.9.0/build/ol.js"></script>

<link rel="stylesheet" href="./css/globe/ol_globe.css" type="text/css">


<script src="./js/ol3/ol.js" type="text/javascript"></script>
<script src="./js/Cesium/Cesium.js" type="text/javascript"></script>
<script src="./js/ol3cesium.js" type="text/javascript"></script>


  <style>
  body {
      margin: 0;
      padding: 0;
    }
   #map {
     position: absolute;
     top: 0;
     left: 0;
     height: 100%;
     width: 100%;
   }
   
#attr-button-logout
{
    position:absolute; 
    right:5px; 
    bottom: 5px; 
    z-index:100; 
    width:48px; 
    height:48px; 
    background-image: url("./img/button_logout.png");
}

#attr-button-conf
{
    position:absolute; 
    right:65px; 
    bottom: 5px; 
    z-index:100; 
    width:48px; 
    height:48px; 
    background-image: url("./img/conf.png");
}

#attr-button-graphs
{
    position:absolute; 
    right:125px; 
    bottom: 5px; 
    z-index:100; 
    width:48px; 
    height:48px; 
    background-image: url("./img/button_graph.png");
}

#attr-button-map
{
    position:absolute; 
    left: 5px; 
    bottom: 60px; 
    z-index:100; 
    width:48px; 
    height:48px; 
    background-image: url("./img/button_map.png");
}

#attr-button-gmap
{
    position:absolute; 
    left: 5px; 
    bottom: 5px; 
    z-index:100; 
    width:48px; 
    height:48px; 
    background-image: url("./img/button_gmap.png");
}

  #attr-logo
  {
    position:absolute; 
    left:10px; 
    top: 50px; 
    z-index:100; 
    width:230px; 
    height:106px; 
    background-image: url("./img/kyroslbs.png");
    background-size: 100% 100%;
  }
#attr-loading
{
    position:absolute; 
    top: 0; left: 0; bottom: 0; right: 0;
    margin: auto;
    z-index:100; 
    width:128px; 
    height:128px; 
    background-image: url("./img/loading.gif");
}

 </style>

<script type="text/javascript">    
 var dict_date = {};
 var iconDict = {};
 var vehicleLicenseDict = {};
 var aliasDict = {};
 var latitudeDict = {};
 var longitudeDict = {};
 var speedDict = {};
 var daySpeedDict = {};
 var weekSpeedDict = {};
 var monthSpeedDict = {};
 var dayDistanceDict = {};
 var weekDistanceDict = {};
 var monthDistanceDict = {};
 var dayConsumeDict = {};
 var weekConsumeDict = {};
 var monthConsumeDict = {};
 var dayHoursDict = {};
 var weekHoursDict = {};
 var monthHoursDict = {};
</script>

<script type="text/javascript">    

var vectorSource = new ol.source.Vector({});
var vector = new ol.layer.Vector({
  source: vectorSource,
});

var addFeatures = function() {
  var features = [];
  var e = 18000000;
  for (var i = 0; i < count; ++i) {
    var feature = new ol.Feature({
      geometry: new ol.geom.Point([
          2 * e * Math.random() - e,
          2 * e * Math.random() - e,
          e * Math.random()
      ])
    });
    var style = [new ol.style.Style({
      image: new ol.style.Circle({
        radius: 2,
        fill: new ol.style.Fill({color: [
          Math.random() * 255,
          Math.random() * 255,
          Math.random() * 255,
          Math.random()
        ]})
      })
    })];
    feature.setStyle(style);

    feature.setId(e * Math.random());
    features.push(feature);
  }

  var now = Date.now();
  created = now - then;
  then = now;

  vectorSource.addFeatures(features);
};

var tile = new ol.layer.Tile({
  source: new ol.source.TileWMS({
    url: 'http://demo.boundlessgeo.com/geoserver/wms',
    params: {
      'LAYERS': 'ne:NE1_HR_LC_SR_W_DR'
    }
  })
});

var map = new ol.Map({
  layers: [tile, vector],
  target: 'map3d',
  view: new ol.View({
    center: [0, 0],
    zoom: 3
  })
});

var ol3d = new olcs.OLCesium({map: map});
var scene = ol3d.getCesiumScene();
var terrainProvider = new Cesium.CesiumTerrainProvider({
  url: '//assets.agi.com/stk-terrain/world'
});
scene.terrainProvider = terrainProvider;
ol3d.setEnabled(true);


// Show off 3D feature picking
var handler = new Cesium.ScreenSpaceEventHandler(scene.canvas);
var lastPicked;
handler.setInputAction(function(movement) {
  var pickedObjects = scene.drillPick(movement.position);
   if (Cesium.defined(pickedObjects)) {
    for (i = 0; i < pickedObjects.length; ++i) {
      var picked = pickedObjects[i].primitive;
      if (picked.olFeature == lastPicked) continue;
      var carto = Cesium.Ellipsoid.WGS84.cartesianToCartographic(picked.position);
      console.log('Picked feature', picked.olFeature, ' is at ', carto);
      lastPicked = picked.olFeature;
    }
  } else {
    lastPicked = undefined;
  }
}, Cesium.ScreenSpaceEventType.LEFT_CLICK);

function clearFeatures() {
  vectorSource.clear();
  total = document.getElementById('total').innerHTML = 0;
}


function isMobile(){
  //return true;
    return (
        (navigator.userAgent.match(/Android/i)) ||
        (navigator.userAgent.match(/webOS/i)) ||
        (navigator.userAgent.match(/iPhone/i)) ||
        (navigator.userAgent.match(/iPod/i)) ||
        (navigator.userAgent.match(/iPad/i)) ||
        (navigator.userAgent.match(/BlackBerry/))
    );
}

</script>



<script>
 
  //window.onload = function() { loadLayer(); setInterval(reloadLayer,5000); }
  window.onload = function() { loadLayer(); }

 $(document).ready(function() {
  $.ajaxSetup({ cache: false });

 if (isMobile()) {
    document.getElementById('attr-logo').style.display = 'none';
  } else {
    var width_window = $(window).width();  //getting windows width
    var height_window = $(window).height();  //getting windows height

    $("#attr-logo").css({ width: width_window*0.1281 + 'px' });
    $("#attr-logo").css({ height: height_window*0.1078+ 'px' });
  }


  });

</script>


</head>

<body>
  <form id="myformLogout" action="/logout" method="POST">
  </form>

  <script>
   var vectorTrackingSource = new ol.source.Vector({
     features: []
   });
    var vectorKyrosTrackingLayer = new ol.layer.Vector({
     title: 'All last position',
     visible: true,
     source: vectorTrackingSource
   });

    function getDeviceImage(vehicleState, posDate, iconReal, iconCover, iconAlarm) 
    {
      var now = new Date();
      //console.log("-->" + now.getTime());
      if (vehicleState==0)
        if (posDate < now.getTime() - 600000)  // posicion antigua: 10 minutos
          return './images/' + iconCover;
        else
          return './images/' + iconReal;
      else
        return './images/' + iconAlarm;
    }

  function loadLayer() {
    var fileJson = "/api/tracking1/user/<%=user%>";


    $.getJSON( fileJson, function( data ) {

    var ndata = data.length;
    var index = 0;
    $.each( data, function( key, val ) {
      processDevice (val.license,val.alias,val.longitude,val.latitude,val.speed,val.heading,val.vehicle_state, val.iconReal, val.iconCover, val.iconAlarm, val.pos_date, val.deviceId);
    index ++;
    if (index == ndata)
      document.getElementById('attr-loading').style.display = 'none';

    });
    });
  }

function reloadLayer() {
  //if (!isMobile()) {  
    var fileJson = "./json/users/realTime/<%=user%>.json?";

     $.getJSON( fileJson, function( data ) {

       var items = [];
       $.each( data, function( key, val ) {
        processDevice (val.license,val.alias,val.longitude,val.latitude,val.speed,val.heading,val.vehicle_state, val.iconReal, val.iconCover, val.iconAlarm, val.pos_date, val.deviceId);
      });               
     });
  //}
}

  function processDevice(ident,alias,lon,lat,speed,heading,vehicleState, iconReal, iconCover, iconAlarm, posDate, deviceId) {             
    iconDict[deviceId] = iconReal;
    vehicleLicenseDict[deviceId] = ident;
    aliasDict[deviceId] = alias;
    latitudeDict[deviceId] = lat;
    longitudeDict[deviceId] = lon;
    speedDict[deviceId] = speed;

    if ( (dict_date[ident]==null) || (dict_date[ident]<posDate) )
    {
      dict_date[ident]=posDate;

      // Eliminar el icono de todas las capas
      iFeature = vectorSource.getFeatureById(ident);
      if (iFeature!=null) {
       vectorSource.removeFeature(iFeature);
      }

      // aÃ±adir el icono
      add (ident,alias,lon,lat,speed,heading,vehicleState, iconReal, iconCover, iconAlarm, deviceId, posDate);
    }
  }

  function add(ident, alias, lon, lat, speed, heading, vehicleState, iconReal, iconCover, iconAlarm, deviceId, posDate) {
    
    var geo_point = new ol.geom.Point(ol.proj.transform([lon, lat], 'EPSG:4326', 'EPSG:3857'));
    

      var iconFeature = new ol.Feature({
        geometry: geo_point,
        id: deviceId,
        name: alias
      });

      var image_src = getDeviceImage(vehicleState, posDate, iconReal, iconCover, iconAlarm); 
      
      var iconStyle;
      var iconScale = 1;

      //iconScale = 0.8;
      iconStyle = [new ol.style.Style({
        image: new ol.style.Icon(/** @type {olx.style.IconOptions} */ ({
         scale: 0.8,
         rotation: heading,
         src: image_src
       }))
      })

      ];

      iconFeature.setStyle(iconStyle);
      iconFeature.setId(ident);

      vectorSource.addFeature(iconFeature); 

  }

 function centerMap(lon, lat) {
  map.setView (new ol.View({
    center: ol.proj.transform([lon, lat], 'EPSG:4326', 'EPSG:3857'),
    zoom: 4,
    maxZoom:22
  }));
 }

 </script>

  <div id="map" class="map3d">
    <div id="attr-logo"></div>
    <div id="attr-loading"></div>
       <!--div id="attr-conf" onclick="javascript:location.href=window.location.host"></div-->
       <div id="attr-button-logout" onclick="$('#myformLogout').submit();"></div>
       <div id="attr-button-conf" onclick="javascript:location.href='http://view.kyroslbs.com/home'"></div>
       <div id="attr-button-graphs" onclick="javascript:location.href='http://view.kyroslbs.com/graphs'"></div>
       <div id="attr-button-map" onclick="javascript:location.href='http://view.kyroslbs.com/map'"></div>
       <div id="attr-button-gmap" onclick="javascript:location.href='http://view.kyroslbs.com/gmap'"></div>
  </div>

<script type="text/javascript">

var tile = new ol.layer.Tile({
  source: new ol.source.TileWMS({
    url: 'http://demo.boundlessgeo.com/geoserver/wms',
    params: {
      'LAYERS': 'ne:NE1_HR_LC_SR_W_DR'
    }
  })
});

var map = new ol.Map({
  layers: [tile, vector],
  target: 'map',
  view: new ol.View({
    center: [-3.5, 41.5],
    zoom: 3.5
  })
});

var ol3d = new olcs.OLCesium({map: map});
var scene = ol3d.getCesiumScene();
var terrainProvider = new Cesium.CesiumTerrainProvider({
  url: '//assets.agi.com/stk-terrain/world'
});
scene.terrainProvider = terrainProvider;
ol3d.setEnabled(true);


// Show off 3D feature picking
var handler = new Cesium.ScreenSpaceEventHandler(scene.canvas);
var lastPicked;
handler.setInputAction(function(movement) {
  var pickedObjects = scene.drillPick(movement.position);
   if (Cesium.defined(pickedObjects)) {
    for (i = 0; i < pickedObjects.length; ++i) {
      var picked = pickedObjects[i].primitive;
      if (picked.olFeature == lastPicked) continue;
      var carto = Cesium.Ellipsoid.WGS84.cartesianToCartographic(picked.position);
      console.log('Picked feature', picked.olFeature, ' is at ', carto);
      lastPicked = picked.olFeature;
    }
  } else {
    lastPicked = undefined;
  }
}, Cesium.ScreenSpaceEventType.LEFT_CLICK);

</script>
  
</body>
</html>